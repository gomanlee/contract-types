"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.StorageSlotMock__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "slot",
                type: "bytes32",
            },
        ],
        name: "getAddress",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "slot",
                type: "bytes32",
            },
        ],
        name: "getBoolean",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "slot",
                type: "bytes32",
            },
        ],
        name: "getBytes32",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "slot",
                type: "bytes32",
            },
        ],
        name: "getUint256",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "slot",
                type: "bytes32",
            },
            {
                internalType: "address",
                name: "value",
                type: "address",
            },
        ],
        name: "setAddress",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "slot",
                type: "bytes32",
            },
            {
                internalType: "bool",
                name: "value",
                type: "bool",
            },
        ],
        name: "setBoolean",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "slot",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "value",
                type: "bytes32",
            },
        ],
        name: "setBytes32",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "slot",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "setUint256",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
var _bytecode = "0x608060405234801561001057600080fd5b5061061d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80634f3029c21161005b5780634f3029c214610139578063a6ed563e14610155578063ca446dd914610185578063f8715b3e146101a157610088565b806321f8a7211461008d57806333598b00146100bd5780633848207a146100ed5780634e91db081461011d575b600080fd5b6100a760048036038101906100a29190610346565b6101bd565b6040516100b491906103b4565b60405180910390f35b6100d760048036038101906100d29190610346565b6101f3565b6040516100e491906103e8565b60405180910390f35b61010760048036038101906101029190610346565b610209565b604051610114919061041e565b60405180910390f35b61013760048036038101906101329190610439565b61022c565b005b610153600480360381019061014e91906104a5565b610241565b005b61016f600480360381019061016a9190610346565b610256565b60405161017c91906104f4565b60405180910390f35b61019f600480360381019061019a919061053b565b61026c565b005b6101bb60048036038101906101b691906105a7565b6102bb565b005b60006101c8826102e3565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006101fe826102ed565b600001549050919050565b6000610214826102f7565b60000160009054906101000a900460ff169050919050565b8061023683610301565b600001819055505050565b8061024b836102ed565b600001819055505050565b600061026182610301565b600001549050919050565b80610276836102e3565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b806102c5836102f7565b60000160006101000a81548160ff0219169083151502179055505050565b6000819050919050565b6000819050919050565b6000819050919050565b6000819050919050565b600080fd5b6000819050919050565b61032381610310565b811461032e57600080fd5b50565b6000813590506103408161031a565b92915050565b60006020828403121561035c5761035b61030b565b5b600061036a84828501610331565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061039e82610373565b9050919050565b6103ae81610393565b82525050565b60006020820190506103c960008301846103a5565b92915050565b6000819050919050565b6103e2816103cf565b82525050565b60006020820190506103fd60008301846103d9565b92915050565b60008115159050919050565b61041881610403565b82525050565b6000602082019050610433600083018461040f565b92915050565b600080604083850312156104505761044f61030b565b5b600061045e85828601610331565b925050602061046f85828601610331565b9150509250929050565b610482816103cf565b811461048d57600080fd5b50565b60008135905061049f81610479565b92915050565b600080604083850312156104bc576104bb61030b565b5b60006104ca85828601610331565b92505060206104db85828601610490565b9150509250929050565b6104ee81610310565b82525050565b600060208201905061050960008301846104e5565b92915050565b61051881610393565b811461052357600080fd5b50565b6000813590506105358161050f565b92915050565b600080604083850312156105525761055161030b565b5b600061056085828601610331565b925050602061057185828601610526565b9150509250929050565b61058481610403565b811461058f57600080fd5b50565b6000813590506105a18161057b565b92915050565b600080604083850312156105be576105bd61030b565b5b60006105cc85828601610331565b92505060206105dd85828601610592565b915050925092905056fea2646970667358221220c52c02a411e965245f265e36fbafc11d44f44442ae8daa920794c121c197dc8664736f6c63430008090033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var StorageSlotMock__factory = /** @class */ (function (_super) {
    __extends(StorageSlotMock__factory, _super);
    function StorageSlotMock__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        _this.contractName = "StorageSlotMock";
        return _this;
    }
    StorageSlotMock__factory.prototype.deploy = function (overrides) {
        return _super.prototype.deploy.call(this, overrides || {});
    };
    StorageSlotMock__factory.prototype.getDeployTransaction = function (overrides) {
        return _super.prototype.getDeployTransaction.call(this, overrides || {});
    };
    StorageSlotMock__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    StorageSlotMock__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    StorageSlotMock__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    StorageSlotMock__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    StorageSlotMock__factory.bytecode = _bytecode;
    StorageSlotMock__factory.abi = _abi;
    return StorageSlotMock__factory;
}(ethers_1.ContractFactory));
exports.StorageSlotMock__factory = StorageSlotMock__factory;

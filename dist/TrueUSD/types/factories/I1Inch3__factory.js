"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.I1Inch3__factory = void 0;
var ethers_1 = require("ethers");
var I1Inch3__factory = /** @class */ (function () {
    function I1Inch3__factory() {
    }
    I1Inch3__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    return I1Inch3__factory;
}());
exports.I1Inch3__factory = I1Inch3__factory;
var _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "caller",
                type: "address",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "srcToken",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "dstToken",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "srcReceiver",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "dstReceiver",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "minReturnAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "flags",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes",
                        name: "permit",
                        type: "bytes",
                    },
                ],
                internalType: "struct I1Inch3.SwapDescription",
                name: "desc",
                type: "tuple",
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes",
            },
        ],
        name: "swap",
        outputs: [
            {
                internalType: "uint256",
                name: "returnAmount",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "gasLeft",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "chiSpent",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "srcToken",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "minReturn",
                type: "uint256",
            },
            {
                internalType: "bytes32[]",
                name: "",
                type: "bytes32[]",
            },
        ],
        name: "unoswap",
        outputs: [
            {
                internalType: "uint256",
                name: "returnAmount",
                type: "uint256",
            },
        ],
        stateMutability: "payable",
        type: "function",
    },
];

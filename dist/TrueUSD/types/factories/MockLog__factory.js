"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.MockLog__factory = void 0;
var ethers_1 = require("ethers");
var MockLog__factory = /** @class */ (function (_super) {
    __extends(MockLog__factory, _super);
    function MockLog__factory(signer) {
        return _super.call(this, _abi, _bytecode, signer) || this;
    }
    MockLog__factory.prototype.deploy = function (overrides) {
        return _super.prototype.deploy.call(this, overrides || {});
    };
    MockLog__factory.prototype.getDeployTransaction = function (overrides) {
        return _super.prototype.getDeployTransaction.call(this, overrides || {});
    };
    MockLog__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    MockLog__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    MockLog__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    return MockLog__factory;
}(ethers_1.ContractFactory));
exports.MockLog__factory = MockLog__factory;
var _abi = [
    {
        inputs: [
            {
                internalType: "uint256",
                name: "x",
                type: "uint256",
            },
        ],
        name: "ln",
        outputs: [
            {
                internalType: "int128",
                name: "",
                type: "int128",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
];
var _bytecode = "0x608060405234801561001057600080fd5b50610212806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806324d4e90a14610030575b600080fd5b61004d6004803603602081101561004657600080fd5b5035610066565b60408051600f92830b90920b8252519081900360200190f35b600061007c61007483610082565b600f0b6100a0565b92915050565b6000677fffffffffffffff82111561009957600080fd5b5060401b90565b60008082600f0b136100b157600080fd5b60806100bc836100da565b600f0b6fb17217f7d1cf79abc9e3b39803f2f6af02901c9050919050565b60008082600f0b136100eb57600080fd5b6000600f83900b68010000000000000000811261010a576040918201911d5b640100000000811261011e576020918201911d5b620100008112610130576010918201911d5b6101008112610141576008918201911d5b60108112610151576004918201911d5b60048112610161576002918201911d5b60028112610170576001820191505b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0820160401b600f85900b607f8490031b6780000000000000005b60008113156101d15790800260ff81901c8281029390930192607f011c9060011d6101ab565b50909594505050505056fea2646970667358221220d3f0f1a24fe1748698a9b7871a6d98c2891886b569fcff317fad387c2bdf18c164736f6c634300060a0033";

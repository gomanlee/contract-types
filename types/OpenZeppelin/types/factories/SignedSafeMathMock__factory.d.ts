import { Signer, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SignedSafeMathMock, SignedSafeMathMockInterface } from "../SignedSafeMathMock";
declare type SignedSafeMathMockConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class SignedSafeMathMock__factory extends ContractFactory {
    constructor(...args: SignedSafeMathMockConstructorParams);
    deploy(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<SignedSafeMathMock>;
    getDeployTransaction(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): TransactionRequest;
    attach(address: string): SignedSafeMathMock;
    connect(signer: Signer): SignedSafeMathMock__factory;
    static readonly contractName: "SignedSafeMathMock";
    readonly contractName: "SignedSafeMathMock";
    static readonly bytecode = "0x608060405234801561001057600080fd5b5061059b806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80634350913814610051578063a5f3c23b14610081578063adefc37b146100b1578063bbe93d91146100e1575b600080fd5b61006b600480360381019061006691906101f4565b610111565b6040516100789190610243565b60405180910390f35b61009b600480360381019061009691906101f4565b610125565b6040516100a89190610243565b60405180910390f35b6100cb60048036038101906100c691906101f4565b610139565b6040516100d89190610243565b60405180910390f35b6100fb60048036038101906100f691906101f4565b61014d565b6040516101089190610243565b60405180910390f35b600061011d8383610161565b905092915050565b60006101318383610177565b905092915050565b6000610145838361018d565b905092915050565b600061015983836101a3565b905092915050565b6000818361016f91906102bc565b905092915050565b600081836101859190610326565b905092915050565b6000818361019b91906103ba565b905092915050565b600081836101b1919061044e565b905092915050565b600080fd5b6000819050919050565b6101d1816101be565b81146101dc57600080fd5b50565b6000813590506101ee816101c8565b92915050565b6000806040838503121561020b5761020a6101b9565b5b6000610219858286016101df565b925050602061022a858286016101df565b9150509250929050565b61023d816101be565b82525050565b60006020820190506102586000830184610234565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006102c7826101be565b91506102d2836101be565b9250826102e2576102e161025e565b5b600160000383147f80000000000000000000000000000000000000000000000000000000000000008314161561031b5761031a61028d565b5b828205905092915050565b6000610331826101be565b915061033c836101be565b9250817f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038313600083121516156103775761037661028d565b5b817f80000000000000000000000000000000000000000000000000000000000000000383126000831216156103af576103ae61028d565b5b828201905092915050565b60006103c5826101be565b91506103d0836101be565b9250827f80000000000000000000000000000000000000000000000000000000000000000182126000841215161561040b5761040a61028d565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0182136000841216156104435761044261028d565b5b828203905092915050565b6000610459826101be565b9150610464836101be565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156104a3576104a261028d565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156104e0576104df61028d565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561051d5761051c61028d565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561055a5761055961028d565b5b82820290509291505056fea264697066735822122077386354eff97894e198c4bc7b9f62e6489b4803c40e2ea1958c04af4eedf89b64736f6c63430008090033";
    static readonly abi: {
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        outputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
    }[];
    static createInterface(): SignedSafeMathMockInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): SignedSafeMathMock;
}
export {};

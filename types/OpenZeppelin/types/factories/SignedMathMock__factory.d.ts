import { Signer, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SignedMathMock, SignedMathMockInterface } from "../SignedMathMock";
declare type SignedMathMockConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class SignedMathMock__factory extends ContractFactory {
    constructor(...args: SignedMathMockConstructorParams);
    deploy(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<SignedMathMock>;
    getDeployTransaction(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): TransactionRequest;
    attach(address: string): SignedMathMock;
    connect(signer: Signer): SignedMathMock__factory;
    static readonly contractName: "SignedMathMock";
    readonly contractName: "SignedMathMock";
    static readonly bytecode = "0x608060405234801561001057600080fd5b506103e3806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631b5ac4b51461005157806329aa9cbe146100815780637f0bb292146100b157806381fe5786146100e1575b600080fd5b61006b6004803603810190610066919061021f565b610111565b6040516100789190610265565b60405180910390f35b61009b60048036038101906100969190610280565b610123565b6040516100a891906102cf565b60405180910390f35b6100cb60048036038101906100c69190610280565b610137565b6040516100d891906102cf565b60405180910390f35b6100fb60048036038101906100f69190610280565b61014b565b60405161010891906102cf565b60405180910390f35b600061011c8261015f565b9050919050565b600061012f838361017b565b905092915050565b60006101438383610194565b905092915050565b600061015783836101ca565b905092915050565b6000808212156101725781600003610174565b815b9050919050565b600081831261018a578161018c565b825b905092915050565b6000806001838518901d8385166101ab9190610319565b905082841860ff82901c16816101c19190610319565b91505092915050565b6000818312156101da57816101dc565b825b905092915050565b600080fd5b6000819050919050565b6101fc816101e9565b811461020757600080fd5b50565b600081359050610219816101f3565b92915050565b600060208284031215610235576102346101e4565b5b60006102438482850161020a565b91505092915050565b6000819050919050565b61025f8161024c565b82525050565b600060208201905061027a6000830184610256565b92915050565b60008060408385031215610297576102966101e4565b5b60006102a58582860161020a565b92505060206102b68582860161020a565b9150509250929050565b6102c9816101e9565b82525050565b60006020820190506102e460008301846102c0565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610324826101e9565b915061032f836101e9565b9250817f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0383136000831215161561036a576103696102ea565b5b817f80000000000000000000000000000000000000000000000000000000000000000383126000831216156103a2576103a16102ea565b5b82820190509291505056fea2646970667358221220ec2b1f4a0d4a86cd2337bb778fca0661c456a52405e023719bf1dbb33ef360a764736f6c63430008090033";
    static readonly abi: {
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        outputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
    }[];
    static createInterface(): SignedMathMockInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): SignedMathMock;
}
export {};

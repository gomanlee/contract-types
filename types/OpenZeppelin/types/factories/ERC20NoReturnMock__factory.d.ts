import { Signer, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC20NoReturnMock, ERC20NoReturnMockInterface } from "../ERC20NoReturnMock";
declare type ERC20NoReturnMockConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class ERC20NoReturnMock__factory extends ContractFactory {
    constructor(...args: ERC20NoReturnMockConstructorParams);
    deploy(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<ERC20NoReturnMock>;
    getDeployTransaction(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): TransactionRequest;
    attach(address: string): ERC20NoReturnMock;
    connect(signer: Signer): ERC20NoReturnMock__factory;
    static readonly contractName: "ERC20NoReturnMock";
    readonly contractName: "ERC20NoReturnMock";
    static readonly bytecode = "0x608060405234801561001057600080fd5b506103b8806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063095ea7b31461005c57806323b872dd146100785780633ba93f2614610094578063a9059cbb146100b0578063dd62ed3e146100cc575b600080fd5b61007660048036038101906100719190610258565b6100fc565b005b610092600480360381019061008d9190610298565b610108565b005b6100ae60048036038101906100a991906102eb565b610115565b005b6100ca60048036038101906100c59190610258565b610162565b005b6100e660048036038101906100e19190610318565b61016e565b6040516100f39190610367565b60405180910390f35b60006001819055505050565b6000600181905550505050565b806000806101216101b7565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b60006001819055505050565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101ef826101c4565b9050919050565b6101ff816101e4565b811461020a57600080fd5b50565b60008135905061021c816101f6565b92915050565b6000819050919050565b61023581610222565b811461024057600080fd5b50565b6000813590506102528161022c565b92915050565b6000806040838503121561026f5761026e6101bf565b5b600061027d8582860161020d565b925050602061028e85828601610243565b9150509250929050565b6000806000606084860312156102b1576102b06101bf565b5b60006102bf8682870161020d565b93505060206102d08682870161020d565b92505060406102e186828701610243565b9150509250925092565b600060208284031215610301576103006101bf565b5b600061030f84828501610243565b91505092915050565b6000806040838503121561032f5761032e6101bf565b5b600061033d8582860161020d565b925050602061034e8582860161020d565b9150509250929050565b61036181610222565b82525050565b600060208201905061037c6000830184610358565b9291505056fea2646970667358221220718fdff5c032535aa51a481290330c1cf6c8b4af92f668c61c7bde40dfc8719a64736f6c63430008090033";
    static readonly abi: {
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        outputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
    }[];
    static createInterface(): ERC20NoReturnMockInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): ERC20NoReturnMock;
}
export {};

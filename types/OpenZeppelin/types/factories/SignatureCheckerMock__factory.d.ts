import { Signer, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SignatureCheckerMock, SignatureCheckerMockInterface } from "../SignatureCheckerMock";
declare type SignatureCheckerMockConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class SignatureCheckerMock__factory extends ContractFactory {
    constructor(...args: SignatureCheckerMockConstructorParams);
    deploy(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<SignatureCheckerMock>;
    getDeployTransaction(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): TransactionRequest;
    attach(address: string): SignatureCheckerMock;
    connect(signer: Signer): SignatureCheckerMock__factory;
    static readonly contractName: "SignatureCheckerMock";
    readonly contractName: "SignatureCheckerMock";
    static readonly bytecode = "0x608060405234801561001057600080fd5b506109f1806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80636ccea65214610030575b600080fd5b61004a60048036038101906100459190610658565b610060565b60405161005791906106e2565b60405180910390f35b600061008d83838673ffffffffffffffffffffffffffffffffffffffff166100969092919063ffffffff16565b90509392505050565b60008060006100a5858561027b565b91509150600060048111156100bd576100bc6106fd565b5b8160048111156100d0576100cf6106fd565b5b14801561010857508573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b1561011857600192505050610274565b6000808773ffffffffffffffffffffffffffffffffffffffff16631626ba7e60e01b888860405160240161014d9291906107c3565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516101b7919061082f565b600060405180830381855afa9150503d80600081146101f2576040519150601f19603f3d011682016040523d82523d6000602084013e6101f7565b606091505b509150915081801561020a575060208151145b801561026d5750631626ba7e60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168180602001905181019061024c919061089e565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9450505050505b9392505050565b6000806041835114156102bd5760008060006020860151925060408601519150606086015160001a90506102b1878285856102fe565b945094505050506102f7565b6040835114156102ee5760008060208501519150604085015190506102e386838361040b565b9350935050506102f7565b60006002915091505b9250929050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c1115610339576000600391509150610402565b601b8560ff16141580156103515750601c8560ff1614155b15610363576000600491509150610402565b60006001878787876040516000815260200160405260405161038894939291906108e7565b6020604051602081039080840390855afa1580156103aa573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156103f957600060019250925050610402565b80600092509250505b94509492505050565b60008060007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60001b841690506000601b60ff8660001c901c61044e9190610965565b905061045c878288856102fe565b935093505050935093915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104a98261047e565b9050919050565b6104b98161049e565b81146104c457600080fd5b50565b6000813590506104d6816104b0565b92915050565b6000819050919050565b6104ef816104dc565b81146104fa57600080fd5b50565b60008135905061050c816104e6565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6105658261051c565b810181811067ffffffffffffffff821117156105845761058361052d565b5b80604052505050565b600061059761046a565b90506105a3828261055c565b919050565b600067ffffffffffffffff8211156105c3576105c261052d565b5b6105cc8261051c565b9050602081019050919050565b82818337600083830152505050565b60006105fb6105f6846105a8565b61058d565b90508281526020810184848401111561061757610616610517565b5b6106228482856105d9565b509392505050565b600082601f83011261063f5761063e610512565b5b813561064f8482602086016105e8565b91505092915050565b60008060006060848603121561067157610670610474565b5b600061067f868287016104c7565b9350506020610690868287016104fd565b925050604084013567ffffffffffffffff8111156106b1576106b0610479565b5b6106bd8682870161062a565b9150509250925092565b60008115159050919050565b6106dc816106c7565b82525050565b60006020820190506106f760008301846106d3565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b610735816104dc565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561077557808201518184015260208101905061075a565b83811115610784576000848401525b50505050565b60006107958261073b565b61079f8185610746565b93506107af818560208601610757565b6107b88161051c565b840191505092915050565b60006040820190506107d8600083018561072c565b81810360208301526107ea818461078a565b90509392505050565b600081905092915050565b60006108098261073b565b61081381856107f3565b9350610823818560208601610757565b80840191505092915050565b600061083b82846107fe565b915081905092915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61087b81610846565b811461088657600080fd5b50565b60008151905061089881610872565b92915050565b6000602082840312156108b4576108b3610474565b5b60006108c284828501610889565b91505092915050565b600060ff82169050919050565b6108e1816108cb565b82525050565b60006080820190506108fc600083018761072c565b61090960208301866108d8565b610916604083018561072c565b610923606083018461072c565b95945050505050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109708261092c565b915061097b8361092c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156109b0576109af610936565b5b82820190509291505056fea26469706673582212208afc7a889c6d1e08409acf5ad50179bff019e156aa08b0a2b1a7548d303acf0164736f6c63430008090033";
    static readonly abi: {
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        outputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
    }[];
    static createInterface(): SignatureCheckerMockInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): SignatureCheckerMock;
}
export {};

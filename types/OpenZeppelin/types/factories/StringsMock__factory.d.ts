import { Signer, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { StringsMock, StringsMockInterface } from "../StringsMock";
declare type StringsMockConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class StringsMock__factory extends ContractFactory {
    constructor(...args: StringsMockConstructorParams);
    deploy(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<StringsMock>;
    getDeployTransaction(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): TransactionRequest;
    attach(address: string): StringsMock;
    connect(signer: Signer): StringsMock__factory;
    static readonly contractName: "StringsMock";
    readonly contractName: "StringsMock";
    static readonly bytecode = "0x608060405234801561001057600080fd5b506109ab806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806302c5b75f1461004657806392b0ed1a14610076578063a2bd3644146100a6575b600080fd5b610060600480360381019061005b919061056c565b6100d6565b60405161006d9190610632565b60405180910390f35b610090600480360381019061008b9190610654565b6100e8565b60405161009d9190610632565b60405180910390f35b6100c060048036038101906100bb919061056c565b6100fc565b6040516100cd9190610632565b60405180910390f35b60606100e18261010e565b9050919050565b60606100f48383610194565b905092915050565b6060610107826103d0565b9050919050565b60606000821415610156576040518060400160405280600481526020017f3078303000000000000000000000000000000000000000000000000000000000815250905061018f565b600082905060005b60008214610180578080610171906106c3565b915050600882901c915061015e565b61018a8482610194565b925050505b919050565b6060600060028360026101a7919061070c565b6101b19190610766565b67ffffffffffffffff8111156101ca576101c96107bc565b5b6040519080825280601f01601f1916602001820160405280156101fc5781602001600182028036833780820191505090505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110610234576102336107eb565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110610298576102976107eb565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600060018460026102d8919061070c565b6102e29190610766565b90505b6001811115610382577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110610324576103236107eb565b5b1a60f81b82828151811061033b5761033a6107eb565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c94508061037b9061081a565b90506102e5565b50600084146103c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bd90610890565b60405180910390fd5b8091505092915050565b60606000821415610418576040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250905061052c565b600082905060005b6000821461044a578080610433906106c3565b915050600a8261044391906108df565b9150610420565b60008167ffffffffffffffff811115610466576104656107bc565b5b6040519080825280601f01601f1916602001820160405280156104985781602001600182028036833780820191505090505b5090505b60008514610525576001826104b19190610910565b9150600a856104c09190610944565b60306104cc9190610766565b60f81b8183815181106104e2576104e16107eb565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8561051e91906108df565b945061049c565b8093505050505b919050565b600080fd5b6000819050919050565b61054981610536565b811461055457600080fd5b50565b60008135905061056681610540565b92915050565b60006020828403121561058257610581610531565b5b600061059084828501610557565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156105d35780820151818401526020810190506105b8565b838111156105e2576000848401525b50505050565b6000601f19601f8301169050919050565b600061060482610599565b61060e81856105a4565b935061061e8185602086016105b5565b610627816105e8565b840191505092915050565b6000602082019050818103600083015261064c81846105f9565b905092915050565b6000806040838503121561066b5761066a610531565b5b600061067985828601610557565b925050602061068a85828601610557565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006106ce82610536565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561070157610700610694565b5b600182019050919050565b600061071782610536565b915061072283610536565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561075b5761075a610694565b5b828202905092915050565b600061077182610536565b915061077c83610536565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156107b1576107b0610694565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061082582610536565b9150600082141561083957610838610694565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b600061087a6020836105a4565b915061088582610844565b602082019050919050565b600060208201905081810360008301526108a98161086d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006108ea82610536565b91506108f583610536565b925082610905576109046108b0565b5b828204905092915050565b600061091b82610536565b915061092683610536565b92508282101561093957610938610694565b5b828203905092915050565b600061094f82610536565b915061095a83610536565b92508261096a576109696108b0565b5b82820690509291505056fea2646970667358221220fe73c79ce2d83b1ca696ded0dfe66d33aeeb6215fb43c3e519f4e11e1da811cd64736f6c63430008090033";
    static readonly abi: {
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        outputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
    }[];
    static createInterface(): StringsMockInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): StringsMock;
}
export {};

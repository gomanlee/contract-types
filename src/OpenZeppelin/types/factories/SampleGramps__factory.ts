/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SampleGramps, SampleGrampsInterface } from "../SampleGramps";

const _abi = [
  {
    inputs: [],
    name: "gramps",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "value",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isHuman",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506109d4806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80634a6c9db6146100515780638129fc1c1461006f578063f62d188814610079578063fa39851f14610095575b600080fd5b6100596100b3565b60405161006691906105b1565b60405180910390f35b6100776100c6565b005b610093600480360381019061008e9190610726565b6101b2565b005b61009d6102a0565b6040516100aa91906107f7565b60405180910390f35b600060029054906101000a900460ff1681565b600060019054906101000a900460ff166100ee5760008054906101000a900460ff16156100f7565b6100f661032e565b5b610136576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012d9061088b565b60405180910390fd5b60008060019054906101000a900460ff161590508015610186576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b61018e61033f565b80156101af5760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff166101da5760008054906101000a900460ff16156101e3565b6101e261032e565b5b610222576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102199061088b565b60405180910390fd5b60008060019054906101000a900460ff161590508015610272576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b61027b82610398565b801561029c5760008060016101000a81548160ff0219169083151502179055505b5050565b600180546102ad906108da565b80601f01602080910402602001604051908101604052809291908181526020018280546102d9906108da565b80156103265780601f106102fb57610100808354040283529160200191610326565b820191906000526020600020905b81548152906001019060200180831161030957829003601f168201915b505050505081565b6000610339306103fb565b15905090565b600060019054906101000a900460ff1661038e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103859061097e565b60405180910390fd5b61039661041e565b565b600060019054906101000a900460ff166103e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103de9061097e565b60405180910390fd5b6103ef61033f565b6103f88161048a565b50565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff1661046d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104649061097e565b60405180910390fd5b6001600060026101000a81548160ff021916908315150217905550565b600060019054906101000a900460ff166104d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d09061097e565b60405180910390fd5b80600190805190602001906104ef9291906104f3565b5050565b8280546104ff906108da565b90600052602060002090601f0160209004810192826105215760008555610568565b82601f1061053a57805160ff1916838001178555610568565b82800160010185558215610568579182015b8281111561056757825182559160200191906001019061054c565b5b5090506105759190610579565b5090565b5b8082111561059257600081600090555060010161057a565b5090565b60008115159050919050565b6105ab81610596565b82525050565b60006020820190506105c660008301846105a2565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610633826105ea565b810181811067ffffffffffffffff82111715610652576106516105fb565b5b80604052505050565b60006106656105cc565b9050610671828261062a565b919050565b600067ffffffffffffffff821115610691576106906105fb565b5b61069a826105ea565b9050602081019050919050565b82818337600083830152505050565b60006106c96106c484610676565b61065b565b9050828152602081018484840111156106e5576106e46105e5565b5b6106f08482856106a7565b509392505050565b600082601f83011261070d5761070c6105e0565b5b813561071d8482602086016106b6565b91505092915050565b60006020828403121561073c5761073b6105d6565b5b600082013567ffffffffffffffff81111561075a576107596105db565b5b610766848285016106f8565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156107a957808201518184015260208101905061078e565b838111156107b8576000848401525b50505050565b60006107c98261076f565b6107d3818561077a565b93506107e381856020860161078b565b6107ec816105ea565b840191505092915050565b6000602082019050818103600083015261081181846107be565b905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000610875602e8361077a565b915061088082610819565b604082019050919050565b600060208201905081810360008301526108a481610868565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806108f257607f821691505b60208210811415610906576109056108ab565b5b50919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b6000610968602b8361077a565b91506109738261090c565b604082019050919050565b600060208201905081810360008301526109978161095b565b905091905056fea264697066735822122072aa0cb1aa491c82a739eb6ee555569c17bb1fa12f900169f2222f6774ef82aa64736f6c63430008090033";

type SampleGrampsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SampleGrampsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SampleGramps__factory extends ContractFactory {
  constructor(...args: SampleGrampsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "SampleGramps";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SampleGramps> {
    return super.deploy(overrides || {}) as Promise<SampleGramps>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SampleGramps {
    return super.attach(address) as SampleGramps;
  }
  connect(signer: Signer): SampleGramps__factory {
    return super.connect(signer) as SampleGramps__factory;
  }
  static readonly contractName: "SampleGramps";
  public readonly contractName: "SampleGramps";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SampleGrampsInterface {
    return new utils.Interface(_abi) as SampleGrampsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SampleGramps {
    return new Contract(address, _abi, signerOrProvider) as SampleGramps;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ECDSAMock, ECDSAMockInterface } from "../ECDSAMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "recover",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "vs",
        type: "bytes32",
      },
    ],
    name: "recover_r_vs",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "recover_v_r_s",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "toEthSignedMessageHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "s",
        type: "bytes",
      },
    ],
    name: "toEthSignedMessageHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611217806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063126442731461005c57806319045a251461008c578063918a15cf146100bc57806392bd87b5146100ec578063a005410b1461011c575b600080fd5b6100766004803603810190610071919061085e565b61014c565b6040516100839190610906565b60405180910390f35b6100a660048036038101906100a19190610a67565b61016f565b6040516100b39190610906565b60405180910390f35b6100d660048036038101906100d19190610ac3565b61018c565b6040516100e39190610aff565b60405180910390f35b61010660048036038101906101019190610b1a565b61019e565b6040516101139190610aff565b60405180910390f35b61013660048036038101906101319190610b63565b6101b0565b6040516101439190610906565b60405180910390f35b6000610165848484886101d0909392919063ffffffff16565b9050949350505050565b600061018482846101fb90919063ffffffff16565b905092915050565b600061019782610222565b9050919050565b60006101a982610252565b9050919050565b60006101c783838661028d9092919063ffffffff16565b90509392505050565b60008060006101e1878787876102b6565b915091506101ee816103c3565b8192505050949350505050565b600080600061020a8585610598565b91509150610217816103c3565b819250505092915050565b6000816040516020016102359190610c2e565b604051602081830303815290604052805190602001209050919050565b600061025e825161061b565b82604051602001610270929190610d56565b604051602081830303815290604052805190602001209050919050565b600080600061029d86868661077c565b915091506102aa816103c3565b81925050509392505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c11156102f15760006003915091506103ba565b601b8560ff16141580156103095750601c8560ff1614155b1561031b5760006004915091506103ba565b6000600187878787604051600081526020016040526040516103409493929190610d94565b6020604051602081039080840390855afa158015610362573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156103b1576000600192509250506103ba565b80600092509250505b94509492505050565b600060048111156103d7576103d6610dd9565b5b8160048111156103ea576103e9610dd9565b5b14156103f557610595565b6001600481111561040957610408610dd9565b5b81600481111561041c5761041b610dd9565b5b141561045d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045490610e65565b60405180910390fd5b6002600481111561047157610470610dd9565b5b81600481111561048457610483610dd9565b5b14156104c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104bc90610ed1565b60405180910390fd5b600360048111156104d9576104d8610dd9565b5b8160048111156104ec576104eb610dd9565b5b141561052d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052490610f63565b60405180910390fd5b6004808111156105405761053f610dd9565b5b81600481111561055357610552610dd9565b5b1415610594576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058b90610ff5565b60405180910390fd5b5b50565b6000806041835114156105da5760008060006020860151925060408601519150606086015160001a90506105ce878285856102b6565b94509450505050610614565b60408351141561060b57600080602085015191506040850151905061060086838361077c565b935093505050610614565b60006002915091505b9250929050565b60606000821415610663576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050610777565b600082905060005b6000821461069557808061067e9061104e565b915050600a8261068e91906110c6565b915061066b565b60008167ffffffffffffffff8111156106b1576106b061093c565b5b6040519080825280601f01601f1916602001820160405280156106e35781602001600182028036833780820191505090505b5090505b60008514610770576001826106fc91906110f7565b9150600a8561070b919061112b565b6030610717919061115c565b60f81b81838151811061072d5761072c6111b2565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8561076991906110c6565b94506106e7565b8093505050505b919050565b60008060007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60001b841690506000601b60ff8660001c901c6107bf919061115c565b90506107cd878288856102b6565b935093505050935093915050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610802816107ef565b811461080d57600080fd5b50565b60008135905061081f816107f9565b92915050565b600060ff82169050919050565b61083b81610825565b811461084657600080fd5b50565b60008135905061085881610832565b92915050565b60008060008060808587031215610878576108776107e5565b5b600061088687828801610810565b945050602061089787828801610849565b93505060406108a887828801610810565b92505060606108b987828801610810565b91505092959194509250565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108f0826108c5565b9050919050565b610900816108e5565b82525050565b600060208201905061091b60008301846108f7565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6109748261092b565b810181811067ffffffffffffffff821117156109935761099261093c565b5b80604052505050565b60006109a66107db565b90506109b2828261096b565b919050565b600067ffffffffffffffff8211156109d2576109d161093c565b5b6109db8261092b565b9050602081019050919050565b82818337600083830152505050565b6000610a0a610a05846109b7565b61099c565b905082815260208101848484011115610a2657610a25610926565b5b610a318482856109e8565b509392505050565b600082601f830112610a4e57610a4d610921565b5b8135610a5e8482602086016109f7565b91505092915050565b60008060408385031215610a7e57610a7d6107e5565b5b6000610a8c85828601610810565b925050602083013567ffffffffffffffff811115610aad57610aac6107ea565b5b610ab985828601610a39565b9150509250929050565b600060208284031215610ad957610ad86107e5565b5b6000610ae784828501610810565b91505092915050565b610af9816107ef565b82525050565b6000602082019050610b146000830184610af0565b92915050565b600060208284031215610b3057610b2f6107e5565b5b600082013567ffffffffffffffff811115610b4e57610b4d6107ea565b5b610b5a84828501610a39565b91505092915050565b600080600060608486031215610b7c57610b7b6107e5565b5b6000610b8a86828701610810565b9350506020610b9b86828701610810565b9250506040610bac86828701610810565b9150509250925092565b600081905092915050565b7f19457468657265756d205369676e6564204d6573736167653a0a333200000000600082015250565b6000610bf7601c83610bb6565b9150610c0282610bc1565b601c82019050919050565b6000819050919050565b610c28610c23826107ef565b610c0d565b82525050565b6000610c3982610bea565b9150610c458284610c17565b60208201915081905092915050565b7f19457468657265756d205369676e6564204d6573736167653a0a000000000000600082015250565b6000610c8a601a83610bb6565b9150610c9582610c54565b601a82019050919050565b600081519050919050565b60005b83811015610cc9578082015181840152602081019050610cae565b83811115610cd8576000848401525b50505050565b6000610ce982610ca0565b610cf38185610bb6565b9350610d03818560208601610cab565b80840191505092915050565b600081519050919050565b600081905092915050565b6000610d3082610d0f565b610d3a8185610d1a565b9350610d4a818560208601610cab565b80840191505092915050565b6000610d6182610c7d565b9150610d6d8285610cde565b9150610d798284610d25565b91508190509392505050565b610d8e81610825565b82525050565b6000608082019050610da96000830187610af0565b610db66020830186610d85565b610dc36040830185610af0565b610dd06060830184610af0565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600082825260208201905092915050565b7f45434453413a20696e76616c6964207369676e61747572650000000000000000600082015250565b6000610e4f601883610e08565b9150610e5a82610e19565b602082019050919050565b60006020820190508181036000830152610e7e81610e42565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265206c656e67746800600082015250565b6000610ebb601f83610e08565b9150610ec682610e85565b602082019050919050565b60006020820190508181036000830152610eea81610eae565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202773272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b6000610f4d602283610e08565b9150610f5882610ef1565b604082019050919050565b60006020820190508181036000830152610f7c81610f40565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202776272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fdf602283610e08565b9150610fea82610f83565b604082019050919050565b6000602082019050818103600083015261100e81610fd2565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b600061105982611044565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561108c5761108b611015565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006110d182611044565b91506110dc83611044565b9250826110ec576110eb611097565b5b828204905092915050565b600061110282611044565b915061110d83611044565b9250828210156111205761111f611015565b5b828203905092915050565b600061113682611044565b915061114183611044565b92508261115157611150611097565b5b828206905092915050565b600061116782611044565b915061117283611044565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156111a7576111a6611015565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea264697066735822122062271611c2bcd725d4b428c9c44cce60390cf315e8757552671eccfc2fd7e04264736f6c63430008090033";

type ECDSAMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ECDSAMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ECDSAMock__factory extends ContractFactory {
  constructor(...args: ECDSAMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ECDSAMock";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ECDSAMock> {
    return super.deploy(overrides || {}) as Promise<ECDSAMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ECDSAMock {
    return super.attach(address) as ECDSAMock;
  }
  connect(signer: Signer): ECDSAMock__factory {
    return super.connect(signer) as ECDSAMock__factory;
  }
  static readonly contractName: "ECDSAMock";
  public readonly contractName: "ECDSAMock";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ECDSAMockInterface {
    return new utils.Interface(_abi) as ECDSAMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ECDSAMock {
    return new Contract(address, _abi, signerOrProvider) as ECDSAMock;
  }
}

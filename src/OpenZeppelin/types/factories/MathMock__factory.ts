/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MathMock, MathMockInterface } from "../MathMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "average",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "ceilDiv",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "max",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "min",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506103ea806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80632b7423ab146100515780636d5433e6146100815780637ae2b5c7146100b15780639cb35327146100e1575b600080fd5b61006b60048036038101906100669190610234565b610111565b6040516100789190610283565b60405180910390f35b61009b60048036038101906100969190610234565b610125565b6040516100a89190610283565b60405180910390f35b6100cb60048036038101906100c69190610234565b610139565b6040516100d89190610283565b60405180910390f35b6100fb60048036038101906100f69190610234565b61014d565b6040516101089190610283565b60405180910390f35b600061011d8383610161565b905092915050565b60006101318383610187565b905092915050565b600061014583836101a1565b905092915050565b600061015983836101ba565b905092915050565b6000600282841861017291906102fc565b82841661017f919061032d565b905092915050565b6000818310156101975781610199565b825b905092915050565b60008183106101b057816101b2565b825b905092915050565b60008082846101c99190610383565b146101d55760016101d8565b60005b60ff1682846101e791906102fc565b6101f1919061032d565b905092915050565b600080fd5b6000819050919050565b610211816101fe565b811461021c57600080fd5b50565b60008135905061022e81610208565b92915050565b6000806040838503121561024b5761024a6101f9565b5b60006102598582860161021f565b925050602061026a8582860161021f565b9150509250929050565b61027d816101fe565b82525050565b60006020820190506102986000830184610274565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610307826101fe565b9150610312836101fe565b9250826103225761032161029e565b5b828204905092915050565b6000610338826101fe565b9150610343836101fe565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610378576103776102cd565b5b828201905092915050565b600061038e826101fe565b9150610399836101fe565b9250826103a9576103a861029e565b5b82820690509291505056fea264697066735822122087adb6a1bf21dd40b3992549cc4069d848c08c51c000ebf4712455bd1acf9c0164736f6c63430008090033";

type MathMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MathMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MathMock__factory extends ContractFactory {
  constructor(...args: MathMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MathMock";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MathMock> {
    return super.deploy(overrides || {}) as Promise<MathMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MathMock {
    return super.attach(address) as MathMock;
  }
  connect(signer: Signer): MathMock__factory {
    return super.connect(signer) as MathMock__factory;
  }
  static readonly contractName: "MathMock";
  public readonly contractName: "MathMock";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MathMockInterface {
    return new utils.Interface(_abi) as MathMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MathMock {
    return new Contract(address, _abi, signerOrProvider) as MathMock;
  }
}

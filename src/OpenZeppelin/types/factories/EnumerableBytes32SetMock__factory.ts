/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  EnumerableBytes32SetMock,
  EnumerableBytes32SetMockInterface,
} from "../EnumerableBytes32SetMock";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "result",
        type: "bool",
      },
    ],
    name: "OperationResult",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "value",
        type: "bytes32",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "at",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "value",
        type: "bytes32",
      },
    ],
    name: "contains",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "length",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "value",
        type: "bytes32",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "values",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061082e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80631d1a696d146100675780631f7b6d3214610097578063446bffba146100b557806395bc2673146100d1578063971217b7146100ed578063e0886f901461010b575b600080fd5b610081600480360381019061007c919061053d565b61013b565b60405161008e9190610585565b60405180910390f35b61009f610158565b6040516100ac91906105b9565b60405180910390f35b6100cf60048036038101906100ca919061053d565b610169565b005b6100eb60048036038101906100e6919061053d565b6101bc565b005b6100f561020f565b6040516101029190610692565b60405180910390f35b610125600480360381019061012091906106e0565b610220565b604051610132919061071c565b60405180910390f35b600061015182600061023d90919063ffffffff16565b9050919050565b60006101646000610254565b905090565b600061017f82600061026990919063ffffffff16565b90507fed9840e0775590557ad736875d96c95cf1458b766335f74339951a32c82a9e33816040516101b09190610585565b60405180910390a15050565b60006101d282600061028090919063ffffffff16565b90507fed9840e0775590557ad736875d96c95cf1458b766335f74339951a32c82a9e33816040516102039190610585565b60405180910390a15050565b606061021b6000610297565b905090565b60006102368260006102ac90919063ffffffff16565b9050919050565b600061024c83600001836102c3565b905092915050565b6000610262826000016102e6565b9050919050565b600061027883600001836102f7565b905092915050565b600061028f8360000183610367565b905092915050565b60606102a58260000161047b565b9050919050565b60006102bb83600001836104d7565b905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b600081600001805490509050919050565b600061030383836102c3565b61035c578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050610361565b600090505b92915050565b6000808360010160008481526020019081526020016000205490506000811461046f5760006001826103999190610766565b90506000600186600001805490506103b19190610766565b90508181146104205760008660000182815481106103d2576103d161079a565b5b90600052602060002001549050808760000184815481106103f6576103f561079a565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b85600001805480610434576104336107c9565b5b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610475565b60009150505b92915050565b6060816000018054806020026020016040519081016040528092919081815260200182805480156104cb57602002820191906000526020600020905b8154815260200190600101908083116104b7575b50505050509050919050565b60008260000182815481106104ef576104ee61079a565b5b9060005260206000200154905092915050565b600080fd5b6000819050919050565b61051a81610507565b811461052557600080fd5b50565b60008135905061053781610511565b92915050565b60006020828403121561055357610552610502565b5b600061056184828501610528565b91505092915050565b60008115159050919050565b61057f8161056a565b82525050565b600060208201905061059a6000830184610576565b92915050565b6000819050919050565b6105b3816105a0565b82525050565b60006020820190506105ce60008301846105aa565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61060981610507565b82525050565b600061061b8383610600565b60208301905092915050565b6000602082019050919050565b600061063f826105d4565b61064981856105df565b9350610654836105f0565b8060005b8381101561068557815161066c888261060f565b975061067783610627565b925050600181019050610658565b5085935050505092915050565b600060208201905081810360008301526106ac8184610634565b905092915050565b6106bd816105a0565b81146106c857600080fd5b50565b6000813590506106da816106b4565b92915050565b6000602082840312156106f6576106f5610502565b5b6000610704848285016106cb565b91505092915050565b61071681610507565b82525050565b6000602082019050610731600083018461070d565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610771826105a0565b915061077c836105a0565b92508282101561078f5761078e610737565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220b5b1fb23e288615040dbfb70811b54ce950b6f361ad2bb48ae22e448e70e6d5e64736f6c63430008090033";

type EnumerableBytes32SetMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EnumerableBytes32SetMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EnumerableBytes32SetMock__factory extends ContractFactory {
  constructor(...args: EnumerableBytes32SetMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "EnumerableBytes32SetMock";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EnumerableBytes32SetMock> {
    return super.deploy(overrides || {}) as Promise<EnumerableBytes32SetMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): EnumerableBytes32SetMock {
    return super.attach(address) as EnumerableBytes32SetMock;
  }
  connect(signer: Signer): EnumerableBytes32SetMock__factory {
    return super.connect(signer) as EnumerableBytes32SetMock__factory;
  }
  static readonly contractName: "EnumerableBytes32SetMock";
  public readonly contractName: "EnumerableBytes32SetMock";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EnumerableBytes32SetMockInterface {
    return new utils.Interface(_abi) as EnumerableBytes32SetMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EnumerableBytes32SetMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as EnumerableBytes32SetMock;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Base64Mock, Base64MockInterface } from "../Base64Mock";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "encode",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506105e2806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806312496a1b14610030575b600080fd5b61004a60048036038101906100459190610330565b610060565b6040516100579190610401565b60405180910390f35b606061006b82610072565b9050919050565b6060600082511415610095576040518060200160405280600081525090506101d1565b600060405180606001604052806040815260200161056d60409139905060006003600285516100c4919061045c565b6100ce91906104e1565b60046100da9190610512565b67ffffffffffffffff8111156100f3576100f2610205565b5b6040519080825280601f01601f1916602001820160405280156101255781602001600182028036833780820191505090505b509050600182016020820185865187015b80821015610191576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f8116850151845360018401935050610136565b50506003865106600181146101ad57600281146101c0576101c8565b603d6001830353603d60028303536101c8565b603d60018303535b50505080925050505b919050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61023d826101f4565b810181811067ffffffffffffffff8211171561025c5761025b610205565b5b80604052505050565b600061026f6101d6565b905061027b8282610234565b919050565b600067ffffffffffffffff82111561029b5761029a610205565b5b6102a4826101f4565b9050602081019050919050565b82818337600083830152505050565b60006102d36102ce84610280565b610265565b9050828152602081018484840111156102ef576102ee6101ef565b5b6102fa8482856102b1565b509392505050565b600082601f830112610317576103166101ea565b5b81356103278482602086016102c0565b91505092915050565b600060208284031215610346576103456101e0565b5b600082013567ffffffffffffffff811115610364576103636101e5565b5b61037084828501610302565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156103b3578082015181840152602081019050610398565b838111156103c2576000848401525b50505050565b60006103d382610379565b6103dd8185610384565b93506103ed818560208601610395565b6103f6816101f4565b840191505092915050565b6000602082019050818103600083015261041b81846103c8565b905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061046782610423565b915061047283610423565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156104a7576104a661042d565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006104ec82610423565b91506104f783610423565b925082610507576105066104b2565b5b828204905092915050565b600061051d82610423565b915061052883610423565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156105615761056061042d565b5b82820290509291505056fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa2646970667358221220e968ab65cec13dbf99089fd835b9b7ac8c2556593087104ca10ef591160fd22964736f6c63430008090033";

type Base64MockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Base64MockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Base64Mock__factory extends ContractFactory {
  constructor(...args: Base64MockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Base64Mock";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Base64Mock> {
    return super.deploy(overrides || {}) as Promise<Base64Mock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Base64Mock {
    return super.attach(address) as Base64Mock;
  }
  connect(signer: Signer): Base64Mock__factory {
    return super.connect(signer) as Base64Mock__factory;
  }
  static readonly contractName: "Base64Mock";
  public readonly contractName: "Base64Mock";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Base64MockInterface {
    return new utils.Interface(_abi) as Base64MockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Base64Mock {
    return new Contract(address, _abi, signerOrProvider) as Base64Mock;
  }
}

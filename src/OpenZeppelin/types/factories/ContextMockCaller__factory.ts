/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ContextMockCaller,
  ContextMockCallerInterface,
} from "../ContextMockCaller";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ContextMock",
        name: "context",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "integerValue",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "stringValue",
        type: "string",
      },
    ],
    name: "callData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ContextMock",
        name: "context",
        type: "address",
      },
    ],
    name: "callSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506104e0806100206000396000f3fe608060405234801561001057600080fd5b50600436106100355760003560e01c80628604591461003a5780633207ad9614610056575b600080fd5b610054600480360381019061004f9190610347565b610072565b005b610070600480360381019061006b91906103b6565b6100e4565b005b8273ffffffffffffffffffffffffffffffffffffffff1663376bf26283836040518363ffffffff1660e01b81526004016100ad92919061047a565b600060405180830381600087803b1580156100c757600080fd5b505af11580156100db573d6000803e3d6000fd5b50505050505050565b8073ffffffffffffffffffffffffffffffffffffffff1663d737d0c76040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561012c57600080fd5b505af1158015610140573d6000803e3d6000fd5b5050505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101868261015b565b9050919050565b60006101988261017b565b9050919050565b6101a88161018d565b81146101b357600080fd5b50565b6000813590506101c58161019f565b92915050565b6000819050919050565b6101de816101cb565b81146101e957600080fd5b50565b6000813590506101fb816101d5565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6102548261020b565b810181811067ffffffffffffffff821117156102735761027261021c565b5b80604052505050565b6000610286610147565b9050610292828261024b565b919050565b600067ffffffffffffffff8211156102b2576102b161021c565b5b6102bb8261020b565b9050602081019050919050565b82818337600083830152505050565b60006102ea6102e584610297565b61027c565b90508281526020810184848401111561030657610305610206565b5b6103118482856102c8565b509392505050565b600082601f83011261032e5761032d610201565b5b813561033e8482602086016102d7565b91505092915050565b6000806000606084860312156103605761035f610151565b5b600061036e868287016101b6565b935050602061037f868287016101ec565b925050604084013567ffffffffffffffff8111156103a05761039f610156565b5b6103ac86828701610319565b9150509250925092565b6000602082840312156103cc576103cb610151565b5b60006103da848285016101b6565b91505092915050565b6103ec816101cb565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561042c578082015181840152602081019050610411565b8381111561043b576000848401525b50505050565b600061044c826103f2565b61045681856103fd565b935061046681856020860161040e565b61046f8161020b565b840191505092915050565b600060408201905061048f60008301856103e3565b81810360208301526104a18184610441565b9050939250505056fea264697066735822122043c093e5426e9c80e3643045d1ef3abe18d0ec9d1a6e3ce27f83e7a8da156a5064736f6c63430008090033";

type ContextMockCallerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ContextMockCallerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ContextMockCaller__factory extends ContractFactory {
  constructor(...args: ContextMockCallerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ContextMockCaller";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContextMockCaller> {
    return super.deploy(overrides || {}) as Promise<ContextMockCaller>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ContextMockCaller {
    return super.attach(address) as ContextMockCaller;
  }
  connect(signer: Signer): ContextMockCaller__factory {
    return super.connect(signer) as ContextMockCaller__factory;
  }
  static readonly contractName: "ContextMockCaller";
  public readonly contractName: "ContextMockCaller";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContextMockCallerInterface {
    return new utils.Interface(_abi) as ContextMockCallerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ContextMockCaller {
    return new Contract(address, _abi, signerOrProvider) as ContextMockCaller;
  }
}

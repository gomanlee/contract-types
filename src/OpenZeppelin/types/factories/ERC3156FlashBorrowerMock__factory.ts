/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC3156FlashBorrowerMock,
  ERC3156FlashBorrowerMockInterface,
} from "../ERC3156FlashBorrowerMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "bool",
        name: "enableReturn",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "enableApprove",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "BalanceOf",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TotalSupply",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onFlashLoan",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051610c61380380610c618339818101604052810190610032919061008e565b80151560808115158152505081151560a08115158152505050506100ce565b600080fd5b60008115159050919050565b61006b81610056565b811461007657600080fd5b50565b60008151905061008881610062565b92915050565b600080604083850312156100a5576100a4610051565b5b60006100b385828601610079565b92505060206100c485828601610079565b9150509250929050565b60805160a051610b6e6100f36000396000610331015260006102710152610b6e6000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806323e30c8b14610030575b600080fd5b61004a6004803603810190610045919061068e565b610060565b6040516100579190610741565b60405180910390f35b60008573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461009a57600080fd5b7f6ff2acfcb07917b1e80e53f0fe390b467b1151d15b38730a6e08397799c05a8b86308873ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016100f6919061076b565b60206040518083038186803b15801561010e57600080fd5b505afa158015610122573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610146919061079b565b604051610155939291906107d7565b60405180910390a17f7249fd4c03cce09b30a13d77804b198e2647c0ccd59eadf4de4e7c16099badc5868773ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156101c557600080fd5b505afa1580156101d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101fd919061079b565b60405161020b92919061080e565b60405180910390a1600083839050111561026f5761026d8684848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505061038b565b505b7f00000000000000000000000000000000000000000000000000000000000000001561032f578573ffffffffffffffffffffffffffffffffffffffff1663095ea7b38786886102be9190610866565b6040518363ffffffff1660e01b81526004016102db92919061080e565b602060405180830381600087803b1580156102f557600080fd5b505af1158015610309573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032d91906108f4565b505b7f000000000000000000000000000000000000000000000000000000000000000061035d576000801b61037f565b7f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd95b90509695505050505050565b60606103cd83836040518060400160405280601e81526020017f416464726573733a206c6f772d6c6576656c2063616c6c206661696c656400008152506103d5565b905092915050565b60606103e484846000856103ed565b90509392505050565b606082471015610432576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610429906109a4565b60405180910390fd5b61043b85610501565b61047a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047190610a10565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516104a39190610aaa565b60006040518083038185875af1925050503d80600081146104e0576040519150601f19603f3d011682016040523d82523d6000602084013e6104e5565b606091505b50915091506104f5828286610524565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6060831561053457829050610584565b6000835111156105475782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057b9190610b16565b60405180910390fd5b9392505050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105c082610595565b9050919050565b6105d0816105b5565b81146105db57600080fd5b50565b6000813590506105ed816105c7565b92915050565b6000819050919050565b610606816105f3565b811461061157600080fd5b50565b600081359050610623816105fd565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261064e5761064d610629565b5b8235905067ffffffffffffffff81111561066b5761066a61062e565b5b60208301915083600182028301111561068757610686610633565b5b9250929050565b60008060008060008060a087890312156106ab576106aa61058b565b5b60006106b989828a016105de565b96505060206106ca89828a016105de565b95505060406106db89828a01610614565b94505060606106ec89828a01610614565b935050608087013567ffffffffffffffff81111561070d5761070c610590565b5b61071989828a01610638565b92509250509295509295509295565b6000819050919050565b61073b81610728565b82525050565b60006020820190506107566000830184610732565b92915050565b610765816105b5565b82525050565b6000602082019050610780600083018461075c565b92915050565b600081519050610795816105fd565b92915050565b6000602082840312156107b1576107b061058b565b5b60006107bf84828501610786565b91505092915050565b6107d1816105f3565b82525050565b60006060820190506107ec600083018661075c565b6107f9602083018561075c565b61080660408301846107c8565b949350505050565b6000604082019050610823600083018561075c565b61083060208301846107c8565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610871826105f3565b915061087c836105f3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156108b1576108b0610837565b5b828201905092915050565b60008115159050919050565b6108d1816108bc565b81146108dc57600080fd5b50565b6000815190506108ee816108c8565b92915050565b60006020828403121561090a5761090961058b565b5b6000610918848285016108df565b91505092915050565b600082825260208201905092915050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b600061098e602683610921565b915061099982610932565b604082019050919050565b600060208201905081810360008301526109bd81610981565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b60006109fa601d83610921565b9150610a05826109c4565b602082019050919050565b60006020820190508181036000830152610a29816109ed565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015610a64578082015181840152602081019050610a49565b83811115610a73576000848401525b50505050565b6000610a8482610a30565b610a8e8185610a3b565b9350610a9e818560208601610a46565b80840191505092915050565b6000610ab68284610a79565b915081905092915050565b600081519050919050565b6000601f19601f8301169050919050565b6000610ae882610ac1565b610af28185610921565b9350610b02818560208601610a46565b610b0b81610acc565b840191505092915050565b60006020820190508181036000830152610b308184610add565b90509291505056fea2646970667358221220d63d2c74a8e714d5d8df247a759d5b21abf8229a3ba8baf7acc65837b817b72064736f6c63430008090033";

type ERC3156FlashBorrowerMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC3156FlashBorrowerMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC3156FlashBorrowerMock__factory extends ContractFactory {
  constructor(...args: ERC3156FlashBorrowerMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ERC3156FlashBorrowerMock";
  }

  deploy(
    enableReturn: boolean,
    enableApprove: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC3156FlashBorrowerMock> {
    return super.deploy(
      enableReturn,
      enableApprove,
      overrides || {}
    ) as Promise<ERC3156FlashBorrowerMock>;
  }
  getDeployTransaction(
    enableReturn: boolean,
    enableApprove: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      enableReturn,
      enableApprove,
      overrides || {}
    );
  }
  attach(address: string): ERC3156FlashBorrowerMock {
    return super.attach(address) as ERC3156FlashBorrowerMock;
  }
  connect(signer: Signer): ERC3156FlashBorrowerMock__factory {
    return super.connect(signer) as ERC3156FlashBorrowerMock__factory;
  }
  static readonly contractName: "ERC3156FlashBorrowerMock";
  public readonly contractName: "ERC3156FlashBorrowerMock";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC3156FlashBorrowerMockInterface {
    return new utils.Interface(_abi) as ERC3156FlashBorrowerMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC3156FlashBorrowerMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC3156FlashBorrowerMock;
  }
}

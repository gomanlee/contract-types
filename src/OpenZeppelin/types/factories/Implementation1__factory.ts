/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Implementation1,
  Implementation1Interface,
} from "../Implementation1";

const _abi = [
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_number",
        type: "uint256",
      },
    ],
    name: "setValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506102c4806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063552410771461003b5780638129fc1c14610057575b600080fd5b610055600480360381019061005091906101be565b610061565b005b61005f61006b565b005b8060018190555050565b600060019054906101000a900460ff166100935760008054906101000a900460ff161561009c565b61009b61014f565b5b6100db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100d29061026e565b60405180910390fd5b60008060019054906101000a900460ff16159050801561012b576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b801561014c5760008060016101000a81548160ff0219169083151502179055505b50565b600061015a30610160565b15905090565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600080fd5b6000819050919050565b61019b81610188565b81146101a657600080fd5b50565b6000813590506101b881610192565b92915050565b6000602082840312156101d4576101d3610183565b5b60006101e2848285016101a9565b91505092915050565b600082825260208201905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000610258602e836101eb565b9150610263826101fc565b604082019050919050565b600060208201905081810360008301526102878161024b565b905091905056fea26469706673582212207624287f0834e5698b156bc3d4b0829acd27b03a1cd56724d02404bf13a2430864736f6c63430008090033";

type Implementation1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Implementation1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Implementation1__factory extends ContractFactory {
  constructor(...args: Implementation1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Implementation1";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Implementation1> {
    return super.deploy(overrides || {}) as Promise<Implementation1>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Implementation1 {
    return super.attach(address) as Implementation1;
  }
  connect(signer: Signer): Implementation1__factory {
    return super.connect(signer) as Implementation1__factory;
  }
  static readonly contractName: "Implementation1";
  public readonly contractName: "Implementation1";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Implementation1Interface {
    return new utils.Interface(_abi) as Implementation1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Implementation1 {
    return new Contract(address, _abi, signerOrProvider) as Implementation1;
  }
}

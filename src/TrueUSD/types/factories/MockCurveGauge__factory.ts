/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { MockCurveGauge } from "../MockCurveGauge";

export class MockCurveGauge__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockCurveGauge> {
    return super.deploy(overrides || {}) as Promise<MockCurveGauge>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockCurveGauge {
    return super.attach(address) as MockCurveGauge;
  }
  connect(signer: Signer): MockCurveGauge__factory {
    return super.connect(signer) as MockCurveGauge__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockCurveGauge {
    return new Contract(address, _abi, signerOrProvider) as MockCurveGauge;
  }
}

const _abi = [
  {
    inputs: [],
    name: "minter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052348015600f57600080fd5b5060978061001e6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80630754617214602d575b600080fd5b6033605c565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b60009056fea2646970667358221220a38c73fe20e5b7dffa0beaaf0ecd2cacb4c8fd50380d3f3b147ca9860062be3364736f6c634300060a0033";

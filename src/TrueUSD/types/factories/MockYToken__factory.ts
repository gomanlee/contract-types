/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { MockYToken } from "../MockYToken";

export class MockYToken__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockYToken> {
    return super.deploy(overrides || {}) as Promise<MockYToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockYToken {
    return super.attach(address) as MockYToken;
  }
  connect(signer: Signer): MockYToken__factory {
    return super.connect(signer) as MockYToken__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockYToken {
    return new Contract(address, _abi, signerOrProvider) as MockYToken;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "checkpoints",
    outputs: [
      {
        internalType: "uint32",
        name: "fromBlock",
        type: "uint32",
      },
      {
        internalType: "uint96",
        name: "votes",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "delegates",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPricePerFullShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "numCheckpoints",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract Registry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "returnsLocked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rounding",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Registry",
        name: "_registry",
        type: "address",
      },
    ],
    name: "setRegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "timeLockRegistry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611287806100206000396000f3fe608060405234801561001057600080fd5b506004361061018d5760003560e01c8063587cde1e116100e357806395d89b411161008c578063a91ee0dc11610066578063a91ee0dc14610518578063dd62ed3e1461054b578063f1127ed8146105865761018d565b806395d89b411461049e578063a457c2d7146104a6578063a9059cbb146104df5761018d565b806377c7b8fc116100bd57806377c7b8fc1461045b5780637b103999146104635780637ecebe001461046b5761018d565b8063587cde1e146103a95780636fcfff45146103dc57806370a08231146104285761018d565b80632e44040311610145578063395093511161011f578063395093511461031857806340c10f191461035157806342966c681461038c5761018d565b80632e440403146102ea578063313ce56714610308578063335f5753146103105761018d565b806318160ddd1161017657806318160ddd1461025c578063238189a81461027657806323b872dd146102a75761018d565b806306fdde0314610192578063095ea7b31461020f575b600080fd5b61019a6105f2565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101d45781810151838201526020016101bc565b50505050905090810190601f1680156102015780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102486004803603604081101561022557600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610629565b604080519115158252519081900360200190f35b610264610646565b60408051918252519081900360200190f35b61027e61064c565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b610248600480360360608110156102bd57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160208101359091169060400135610668565b6102f261070f565b6040805160ff9092168252519081900360200190f35b6102f2610714565b610248610719565b6102486004803603604081101561032e57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561073a565b61038a6004803603604081101561036757600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561079b565b005b61038a600480360360208110156103a257600080fd5b50356107a9565b61027e600480360360208110156103bf57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166107b6565b61040f600480360360208110156103f257600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166107de565b6040805163ffffffff9092168252519081900360200190f35b6102646004803603602081101561043e57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166107f6565b610264610808565b61027e610814565b6102646004803603602081101561048157600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610830565b61019a610842565b610248600480360360408110156104bc57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610879565b610248600480360360408110156104f557600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356108f4565b61038a6004803603602081101561052e57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610908565b6102646004803603604081101561056157600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135811691602001351661094f565b6105c56004803603604081101561059c57600080fd5b50803573ffffffffffffffffffffffffffffffffffffffff16906020013563ffffffff1661096c565b6040805163ffffffff90931683526bffffffffffffffffffffffff90911660208301528051918290030190f35b60408051808201909152600781527f5472756555534400000000000000000000000000000000000000000000000000602082015290565b600061063d6106366109a7565b84846109ab565b50600192915050565b60015481565b60085473ffffffffffffffffffffffffffffffffffffffff1681565b6000610675848484610af2565b610705846106816109a7565b6107008560405180606001604052806028815260200161119b6028913973ffffffffffffffffffffffffffffffffffffffff8a166000908152600360205260408120906106cc6109a7565b73ffffffffffffffffffffffffffffffffffffffff168152602081019190915260400160002054919063ffffffff610cd016565b6109ab565b5060019392505050565b600290565b601290565b60085474010000000000000000000000000000000000000000900460ff1681565b600061063d6107476109a7565b8461070085600360006107586109a7565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610d8116565b6107a58282610dfc565b5050565b6107b33382610f3b565b50565b60096020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b600b6020526000908152604090205463ffffffff1681565b60026020526000908152604090205481565b670de0b6b3a764000090565b600d5473ffffffffffffffffffffffffffffffffffffffff1690565b600c6020526000908152604090205481565b60408051808201909152600481527f5455534400000000000000000000000000000000000000000000000000000000602082015290565b600061063d6108866109a7565b846107008560405180606001604052806025815260200161122d60259139600360006108b06109a7565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff610cd016565b600061063d6109016109a7565b8484610af2565b600d80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b600360209081526000928352604080842090915290825290205481565b600a60209081526000928352604080842090915290825290205463ffffffff81169064010000000090046bffffffffffffffffffffffff1682565b3390565b73ffffffffffffffffffffffffffffffffffffffff8316610a17576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806112096024913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610a83576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806111536022913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff808416600081815260036020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b73ffffffffffffffffffffffffffffffffffffffff8316610b5e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806111e46025913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610bca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602381526020018061110e6023913960400191505060405180910390fd5b610bd5838383611091565b610c25816040518060600160405280602681526020016111756026913973ffffffffffffffffffffffffffffffffffffffff8616600090815260026020526040902054919063ffffffff610cd016565b73ffffffffffffffffffffffffffffffffffffffff8085166000908152600260205260408082209390935590841681522054610c67908263ffffffff610d8116565b73ffffffffffffffffffffffffffffffffffffffff80841660008181526002602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610d79576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610d3e578181015183820152602001610d26565b50505050905090810190601f168015610d6b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610df557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b73ffffffffffffffffffffffffffffffffffffffff8216610e7e57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b610e8a60008383611091565b600154610e9d908263ffffffff610d8116565b60015573ffffffffffffffffffffffffffffffffffffffff8216600090815260026020526040902054610ed6908263ffffffff610d8116565b73ffffffffffffffffffffffffffffffffffffffff831660008181526002602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b73ffffffffffffffffffffffffffffffffffffffff8216610fa7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806111c36021913960400191505060405180910390fd5b610fb382600083611091565b611003816040518060600160405280602281526020016111316022913973ffffffffffffffffffffffffffffffffffffffff8516600090815260026020526040902054919063ffffffff610cd016565b73ffffffffffffffffffffffffffffffffffffffff831660009081526002602052604090205560015461103c908263ffffffff61109616565b60015560408051828152905160009173ffffffffffffffffffffffffffffffffffffffff8516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b505050565b60008282111561110757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b5090039056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212205000ba6ddde4abc7845d07f579c94bd3413a6141a458398cff22540e2b9e553464736f6c634300060a0033";
